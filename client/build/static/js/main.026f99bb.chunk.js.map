{"version":3,"sources":["context/authContext/authContext.js","layouts/Navbar.js","context/guestContext/guestContext.js","components/guests/GuestForm.js","components/guests/GuestCounter.js","components/guests/GuestFilter.js","components/guests/GuestSearch.js","components/guests/Guest.js","components/guests/Guests.js","components/pages/Home.js","components/pages/Register.js","components/pages/Login.js","context/guestContext/guestReducer.js","context/types.js","context/guestContext/GuestState.js","context/authContext/authReducer.js","utils/setToken.js","context/authContext/AuthState.js","components/pages/routes/privateRoute.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","Navbar","useContext","logout","clearError","userAuth","user","userLinks","name","className","href","onClick","authLinks","to","GuestContext","GuestForm","addGuest","editAble","updateGuest","clearEdit","useEffect","setGuest","phone","specialty","useState","guest","handleChange","e","target","value","onSubmit","preventDefault","type","placeholder","onChange","checked","GuestCounter","guests","totalInvited","length","attending","filter","isconfirmed","totalAttending","invitedBySpecial","attendingBySpecial","GuestFilter","toggleFilter","GuestSearch","searchGuest","clearSearch","searchValue","useRef","ref","current","Guest","removeGuest","editGuest","_id","Guests","filterGuest","search","getGuests","map","key","Home","getUser","Register","props","registerUser","errors","setError","history","push","email","password","password2","setUser","msg","error","Login","loginUser","state","payload","reg","RegExp","match","GuestState","useReducer","guestReducer","dispatch","a","axios","get","res","data","response","config","post","id","delete","headers","put","Provider","children","action","localStorage","setItem","token","removeItem","setToken","defaults","common","AuthState","authReducer","userData","header","err","PrivateRoute","Component","component","rest","render","App","exact","path","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.026f99bb.chunk.js","sourcesContent":["import {createContext} from 'react'\r\nconst AuthContext = createContext()\r\nexport default AuthContext","import React, {useContext, Fragment} from 'react';\r\nimport AuthContext from '../context/authContext/authContext'\r\nimport navbar from '../css/navbar.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    const {logout, clearError, userAuth, user} = useContext(AuthContext)\r\n\r\n    const onLogout = () => {\r\n        logout()\r\n        clearError()\r\n    }\r\n\r\n    const userLinks = (\r\n        <Fragment>\r\n             <li>Hello, {user && user.name} </li>\r\n                <span className=\"sm-hide\">|</span>\r\n                <li>\r\n                    <a href=\"#!\" onClick = {onLogout}>\r\n                        <span className=\"sm-hide\">Logout</span>\r\n                        <i className=\"fas fa-sign-out-alt\"></i>\r\n                    </a>\r\n                </li>\r\n        </Fragment>\r\n    )\r\n\r\n    const authLinks =  (\r\n        <Fragment>\r\n            <li>\r\n                <Link to ='/register'>Register</Link>\r\n            </li>\r\n            <span className = \"sm-hide\">|</span>\r\n            <li>\r\n                <Link to ='/login'>Login</Link>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"logo\">\r\n                <h1><i className=\"fas fa-glass-cheers\"/>\r\n                    Guest IV\r\n                </h1>\r\n                <p>Made with <i className=\"fas fa-heart\"/>\r\n                by kenneth</p>\r\n            </div>\r\n\r\n            <ul>\r\n               {userAuth ? userLinks : authLinks}\r\n            </ul>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import {createContext} from 'react'\r\nconst GuestContext = createContext()\r\n\r\nexport default GuestContext\r\n\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport GuestContext from '../../context/guestContext/guestContext'\r\nimport guestForm from '../../css/guestForm.css'\r\n\r\nconst GuestForm = () => {\r\n    const {addGuest, editAble, updateGuest, clearEdit} = useContext(GuestContext)\r\n    useEffect(() => {\r\n        if(editAble !== null) {\r\n            setGuest(editAble)\r\n        } else {\r\n            setGuest({\r\n                name: '',\r\n                phone:'',\r\n                specialty:'Backend Developer'\r\n            })\r\n        }\r\n    }, [editAble])\r\n    const [guest, setGuest] = useState({\r\n        name: '',\r\n        phone:'',\r\n        specialty:'Backend Developer'\r\n    })\r\n\r\n    \r\n\r\n    const {name, phone, specialty} = guest\r\n\r\n    const handleChange = (e) => {\r\n        setGuest({\r\n            ...guest,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(editAble !==null) {\r\n            updateGuest(guest)\r\n            clearEdit()\r\n        } else {\r\n            addGuest(guest)\r\n            setGuest({\r\n                name: '',\r\n                phone:'',\r\n                specialty:'Backend Developer'\r\n            })\r\n        }\r\n       \r\n    }\r\n    return (\r\n        <div className=\"invite-section\">\r\n            <h1>{editAble !== null ? 'Edit Guest' :'Invite Someone'}</h1>\r\n            <form onSubmit = {onSubmit}>\r\n                <input type=\"text\" placeholder=\"Name\" name=\"name\" value = {name} onChange = {handleChange}/>\r\n                <input type=\"text\" placeholder = \"Phone\" name=\"phone\" value = {phone} onChange = {handleChange}/>\r\n                <p className=\"options-label\">Specialty</p>\r\n                <div className=\"options\">\r\n                    <label className=\"container\">Backend Developer\r\n                    <input type=\"radio\" name=\"specialty\" value=\"Backend Developer\" checked={specialty === 'Backend Developer'} onChange = {handleChange}/>\r\n                    <span className=\"checkmark\"></span>\r\n                    </label>\r\n\r\n                    <label className=\"container\">Frontend Developer\r\n                    <input type=\"radio\" name=\"specialty\" value=\"Frontend Developer\"checked={specialty === 'Frontend Developer'} onChange = {handleChange}/>\r\n                    <span className=\"checkmark\"></span>\r\n                    </label>\r\n\r\n                    <label className=\"container\">UX Designer\r\n                    <input type=\"radio\" name=\"specialty\" value=\"UX Designer\"  checked={specialty === 'UX Designer'}onChange = {handleChange}/>\r\n                    <span className=\"checkmark\"></span> \r\n                    </label>\r\n                </div>\r\n                <input type=\"submit\" value ={editAble !== null ? 'Update Guest' :'Add Guest'}className=\"btn\"/>\r\n                {editAble !== null ? <input onClick = {clearEdit} value = \"Cancel\"  type = \"button\" className = \" btn clear\"/> :null}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GuestForm\r\n","import React, {useContext} from 'react';\r\nimport GuestContext from '../../context/guestContext/guestContext';\r\nimport guestCouter from '../../css/guestCouter.css'\r\n\r\nconst GuestCounter = () => {\r\n    const {guests} = useContext(GuestContext)\r\n    const totalInvited = guests.length\r\n    const attending = guests.filter(guest => guest.isconfirmed)\r\n    const totalAttending = attending.length\r\n    const invitedBySpecial = (type) => guests.filter(guest => guest.specialty === type).length\r\n    const attendingBySpecial = (type) => attending.filter(guest => guest.specialty === type).length\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Guest</th>\r\n                        <th>Invited</th>\r\n                        <th>Attending</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Backend Developer</th>\r\n                        <td>{invitedBySpecial('Backend Developer')}</td>\r\n                        <td>{attendingBySpecial('Backend Developer')}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Frontend Developer</th>\r\n                        <td>{invitedBySpecial('Frontend Developer')}</td>\r\n                        <td>{attendingBySpecial('Frontend Developer')}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>UX Designer</th>\r\n                        <td>{invitedBySpecial('UX Designer')}</td>\r\n                        <td>{attendingBySpecial('UX Designer')}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Total</th>\r\n                        <td>{totalInvited}</td>\r\n                        <td>{totalAttending}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GuestCounter\r\n","import React, {useContext}from 'react';\r\nimport guestFilter from '../../css/guestFilter.css';\r\nimport GuestContext from '../../context/guestContext/guestContext'\r\n\r\nconst GuestFilter = () => {\r\n    const {toggleFilter} = useContext(GuestContext)\r\n    return (\r\n        <div className=\"toggle\">\r\n            <label className=\"switch\">\r\n                <input type=\"checkbox\" onChange = {() => toggleFilter()}/>\r\n                <span className=\"slider round\"></span>\r\n            </label>\r\n            <p className=\"lead\">Show attending only!</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GuestFilter\r\n","import React, {useContext, useRef} from 'react';\r\nimport guestSearch from '../../css/guestSearch.css';\r\nimport GuestContext from '../../context/guestContext/guestContext'\r\n\r\nconst GuestSearch = () => {\r\n    const {searchGuest, clearSearch} = useContext(GuestContext)\r\n    const searchValue = useRef('')\r\n\r\n    const handleChange = e => {\r\n        if(searchValue.current.value !== '') {\r\n            searchGuest(e.target.value)\r\n        } else {\r\n            clearSearch()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input ref={searchValue} type=\"text\" onChange = {handleChange}className=\"search\" placeholder=\"Search Guest by name...\"/>\r\n            <i className=\"fas fa-search search-icon\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GuestSearch\r\n","import React, {useContext} from 'react';\r\nimport GuestContext from '../../context/guestContext/guestContext'\r\nimport guest from '../../css/guest.css'\r\n\r\nconst Guest = ({guest}) => {\r\n    const {removeGuest, updateGuest, editGuest} = useContext(GuestContext)\r\n    const {_id, name, phone, specialty, isconfirmed} = guest\r\n\r\n    const handleRemove = () => {\r\n        removeGuest(_id)\r\n    }\r\n\r\n    const handleIsconfirmed = () => {\r\n        updateGuest({...guest, isconfirmed: !isconfirmed})\r\n    }\r\n    return (\r\n        <div className=\"guest-card\">\r\n            <div className=\"card-head\">\r\n                <div>\r\n                    <label className = {`${isconfirmed && 'confirm'}`}>Confirmed\r\n                        <i className={`fas fa-check-square ${isconfirmed && 'confirm'}`}>\r\n                            <input type =\"checkbox\" onChange = {handleIsconfirmed}/>\r\n                        </i>\r\n                    </label>\r\n                </div>\r\n\r\n                <div>\r\n                    <button onClick = {() => editGuest(guest)}>\r\n                        <i className=\"fas fa-user-edit\"></i>\r\n                    </button>\r\n\r\n                    <button onClick = {handleRemove}>\r\n                        <i className=\"fas fa-trash-alt remove\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <h2>{name}</h2>\r\n                <span className={\"badge\" + (specialty === 'Frontend Developer' ? 'red' : specialty === 'Backend Developer' ? 'green' : 'seaGreen')}>{specialty}</span>\r\n                <div className=\"contact\">\r\n                    <i className=\"fas fa-phone-alt\"/>\r\n                    <p>{phone}</p>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Guest\r\n","import React , {useContext, useEffect}from 'react';\r\nimport Guest from './Guest';\r\nimport GuestContext from '../../context/guestContext/guestContext';\r\nimport guests from '../../css/guests.css'\r\n\r\nconst Guests = () => {\r\n\r\n    const {guests, filterGuest, search, getGuests} = useContext(GuestContext)\r\n    useEffect(() => {\r\n    getGuests()\r\n     //eslint-diable-next-line\r\n    }, [])\r\n    return (\r\n        <div className=\"guests\">\r\n            {\r\n            search !== null ? search.map(guest => <Guest key ={guest._id} guest={guest}/>) :\r\n            guests.filter(guest => !filterGuest || guest.isconfirmed).map(guest => <Guest key ={guest._id} guest ={guest}/>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Guests\r\n","import React, {useContext, useEffect} from 'react';\r\nimport GuestForm from '../guests/GuestForm';\r\nimport GuestCounter from '../guests/GuestCounter';\r\nimport GuestFilter from '../guests/GuestFilter';\r\nimport GuestSearch from '../guests/GuestSearch';\r\nimport Guests from '../guests/Guests'\r\nimport AuthContext from '../../context/authContext/authContext'\r\n\r\nconst Home = () => {\r\n    const {getUser} = useContext(AuthContext)\r\n    useEffect(() =>{\r\n        getUser()\r\n        //eslint-diable-next-line\r\n    },[])\r\n    return (\r\n        <div className=\"app-container\">\r\n            <div className=\"main\">\r\n                <div className=\"filter\">\r\n                    <GuestFilter/>\r\n                    <GuestSearch/>\r\n                  \r\n                </div>\r\n            <GuestForm/>\r\n            <GuestCounter/>\r\n            </div>\r\n            <Guests/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport AuthContext from '../../context/authContext/authContext';\r\nimport {Link} from 'react-router-dom' ;\r\n\r\nconst Register = (props) => {\r\n    const {registerUser, userAuth, errors, setError, clearError} = useContext(AuthContext)\r\n    useEffect(() => {\r\n     if(userAuth) {\r\n        props.history.push('/')\r\n     }\r\n    }, [userAuth, props.history.push])\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password:  '',\r\n        password2: ''\r\n    })\r\n    const {name, email, password, password2} = user\r\n\r\n    const handleChange = (e) => {\r\n        setUser({...user, [e.target.name]: e.target.value})\r\n        clearError()\r\n    }\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        if(password !== password2) {\r\n            setError({msg:\"Passwords Don't Match\"})\r\n        } else {\r\n            registerUser({name, email, password})\r\n            clearError()\r\n        }\r\n    }\r\n    return (\r\n        <div className = \"register\">\r\n            <h1>Sign Up</h1>\r\n          \r\n        <form onSubmit = {submit}>\r\n            <input type=\"text\" name=\"name\" placeholder=\"name\" value = {name} onChange = {handleChange}/>\r\n            <input type = \"email\" name=\"email\" placeholder=\"email\" value = {email} onChange = {handleChange}/>\r\n            <input type =\"password\" name=\"password\" placeholder=\"password\" value = {password} onChange = {handleChange}/>\r\n            <input type = \"password\" name=\"password2\"placeholder=\"Confirm Password\" value = {password2} onChange = {handleChange}/>\r\n\r\n            <input type = \"submit\" value=\"Sign Up\" className = \"btn\"/>\r\n        </form>\r\n       <div className = \"question\">\r\n           {errors !== null && <button className =\"danger\">\r\n               {errors.msg ? errors.msg : errors.error[0].msg}\r\n               <span onClick = {() => clearError()}>X</span></button>}\r\n           <p>Already have an account ? {\" \"} <Link to ='/login'>Login</Link></p>\r\n       </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport AuthContext from '../../context/authContext/authContext';\r\nimport {Link} from 'react-router-dom' ;\r\n\r\nconst Login = (props) => {\r\n    const {loginUser, userAuth, errors, clearError} = useContext(AuthContext)\r\n    useEffect(() => {\r\n        if(userAuth) {\r\n           props.history.push('/')\r\n        }\r\n       }, [userAuth, props.history.push])\r\n    const [user, setUser] = useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n    const {email, password} = user\r\n\r\n    const handleChange = (e) => {\r\n        setUser({...user, [e.target.name]:e.target.value})\r\n        clearError()\r\n    }\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        loginUser({email, password})\r\n        clearError()\r\n    }\r\n    return (\r\n        <div className = \"register\">\r\n            <h1>Login</h1>\r\n          \r\n        <form onSubmit = {submit}>\r\n            \r\n            <input type = \"email\" name=\"email\" placeholder=\"email\" onChange = {handleChange} value = {email}/>\r\n            <input type =\"password\" name=\"password\" placeholder=\"password\" onChange = {handleChange} value = {password}/>\r\n            \r\n\r\n            <input type = \"submit\" value=\"Login\" className = \"btn\"/>\r\n        </form>\r\n       <div className = \"question\">\r\n       {errors !== null && <button className =\"danger\">\r\n               {errors.msg ? errors.msg : errors.error[0].msg}\r\n               <span onClick = {() => clearError()}>X</span></button>}\r\n           <p>Don't have an account ? {\" \"} <Link to ='/register'>Sign Up</Link></p>\r\n       </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import {\r\n    ADD_GUEST,\r\n    REMOVE_GUEST,\r\n    TOGGLE_FILTER,\r\n    SEARCH_GUEST,\r\n    CLEAR_SEARCH,\r\n    UPDATE_GUEST,\r\n    EDIT_GUEST,\r\n    CLEAR_EDIT,\r\n    GET_GUESTS,\r\n    GUESTS_ERROR\r\n} from '../types'\r\n\r\n\r\nexport default (state, {type, payload}) => {\r\n    switch(type) {\r\n        case GET_GUESTS:\r\n            return{\r\n                ...state,\r\n                guests:payload\r\n            }\r\n        case ADD_GUEST:\r\n            return {\r\n                ...state,\r\n                guests:[...state.guests, payload]\r\n            }\r\n            case REMOVE_GUEST:\r\n                return {\r\n                    ...state,\r\n                    guests: state.guests.filter(guest => guest._id !==payload)\r\n                }\r\n\r\n                case UPDATE_GUEST:\r\n                    return {\r\n                        ...state,\r\n                        guests:state.guests.map(guest => guest._id === payload._id ? payload :guest)\r\n                    \r\n                    }\r\n\r\n                    case EDIT_GUEST:\r\n                        return {\r\n                            ...state,\r\n                            editAble:payload\r\n                        }\r\n\r\n                        case CLEAR_EDIT:\r\n                            return {\r\n                                ...state,\r\n                                editAble:null\r\n                            }\r\n\r\n\r\n        case SEARCH_GUEST :\r\n            const reg = new RegExp(`${payload}`, 'gi')\r\n            return {\r\n                ...state,\r\n                search:state.guests.filter(guest => guest.name.match(reg))\r\n            }\r\n            case GUESTS_ERROR:\r\n                return {\r\n                    ...state,\r\n                    guests:[],\r\n                    errors:payload\r\n                }\r\n            case CLEAR_SEARCH:\r\n                return {\r\n                    ...state,\r\n                    search:null\r\n\r\n                }\r\n        case TOGGLE_FILTER:\r\n            return {\r\n                ...state,\r\n                filterGuest: !state.filterGuest\r\n            }\r\n\r\n            \r\n        default :\r\n        return state\r\n    }\r\n\r\n}","export const TOGGLE_FILTER = 'TOGGLE_FILTER'\r\nexport const SEARCH_GUEST = 'SEARCH_GUEST'\r\nexport const CLEAR_SEARCH = 'CLEAR_SEARCH'\r\nexport const ADD_GUEST = 'ADD_GUEST'\r\nexport const REMOVE_GUEST ='REMOVE_GUEST'\r\nexport const UPDATE_GUEST = 'UPDATE_GUEST'\r\nexport const EDIT_GUEST = 'EDIT_GUEST'\r\nexport const CLEAR_EDIT = 'CLEAR_EDIT'\r\nexport const GET_GUESTS = 'GET_GUESTS'\r\nexport const GUESTS_ERROR = 'GUESTS_ERROR'\r\nexport const SUCCESS_REGISTER = 'SUCCESS_REGISTER'\r\nexport const SUCCESS_LOGIN = 'SUCCESS_LOGIN'\r\nexport const FAIL_REGISTER = 'FAIL_REGISTER'\r\nexport const FAIL_LOGIN = 'FAIL_LOGIN'\r\nexport const SET_ERROR = 'SET_ERROR'\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR'\r\nexport const LOG_OUT = 'LOG_OUT'\r\nexport const SET_USER = 'SET_USER'\r\nexport const AUTH_ERROR = 'AUTH_ERROR'\r\n\r\n","import React, { useReducer } from \"react\";\r\nimport GuestContext from \"./guestContext\";\r\nimport guestReducer from \"./guestReducer\";\r\nimport axios from \"axios\";\r\nimport {\r\n  TOGGLE_FILTER,\r\n  SEARCH_GUEST,\r\n  CLEAR_SEARCH,\r\n  ADD_GUEST,\r\n  REMOVE_GUEST,\r\n  UPDATE_GUEST,\r\n  EDIT_GUEST,\r\n  CLEAR_EDIT,\r\n  GET_GUESTS,\r\n  GUESTS_ERROR,\r\n} from \"../types\";\r\n\r\nconst GuestState = (props) => {\r\n  const initialState = {\r\n    filterGuest: false,\r\n    search: null,\r\n    editAble: null,\r\n    guests: [],\r\n    errors: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(guestReducer, initialState);\r\n\r\n  //getGuest\r\n\r\n  const getGuests = async () => {\r\n    try {\r\n      const res = await axios.get(\"/guests\");\r\n      dispatch({\r\n        type: GET_GUESTS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GUESTS_ERROR,\r\n        payload: err.response.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  const addGuest = async (guest) => {\r\n    const config = {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n    try {\r\n      const res = await axios.post(\"/guests\", guest, config);\r\n      dispatch({\r\n        type: ADD_GUEST,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GUESTS_ERROR,\r\n        payload: err.response.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeGuest = async (id) => {\r\n    try {\r\n      await axios.delete(`/guests/${id}`);\r\n      dispatch({\r\n        type: REMOVE_GUEST,\r\n        payload: id,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GUESTS_ERROR,\r\n        payload: err.response.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateGuest = async (guest) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.put(`/guests/${guest._id}`, guest, config);\r\n      dispatch({\r\n        type: UPDATE_GUEST,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GUESTS_ERROR,\r\n        payload: err.response.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  const editGuest = (guest) => {\r\n    dispatch({\r\n      type: EDIT_GUEST,\r\n      payload: guest,\r\n    });\r\n  };\r\n\r\n  const clearEdit = () => {\r\n    dispatch({\r\n      type: CLEAR_EDIT,\r\n    });\r\n  };\r\n\r\n  const toggleFilter = () => {\r\n    dispatch({\r\n      type: TOGGLE_FILTER,\r\n    });\r\n  };\r\n\r\n  const searchGuest = (guest) => {\r\n    dispatch({\r\n      type: SEARCH_GUEST,\r\n      payload: guest,\r\n    });\r\n  };\r\n\r\n  const clearSearch = () => {\r\n    dispatch({\r\n      type: CLEAR_SEARCH,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GuestContext.Provider\r\n      value={{\r\n        guests: state.guests,\r\n        filterGuest: state.filterGuest,\r\n        search: state.search,\r\n        editAble: state.editAble,\r\n        getGuests,\r\n        addGuest,\r\n        removeGuest,\r\n        updateGuest,\r\n        editGuest,\r\n        clearEdit,\r\n        toggleFilter,\r\n        searchGuest,\r\n        clearSearch,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GuestContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GuestState;\r\n","import {\r\n  SUCCESS_REGISTER,\r\n  SUCCESS_LOGIN,\r\n  FAIL_REGISTER,\r\n  FAIL_LOGIN,\r\n  SET_ERROR,\r\n  CLEAR_ERROR,\r\n  LOG_OUT,\r\n  SET_USER,\r\n  AUTH_ERROR,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        userAuth: true,\r\n        errors: null,\r\n      };\r\n    case SUCCESS_REGISTER:\r\n    case SUCCESS_LOGIN:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        userAuth: true,\r\n        errors: null,\r\n      };\r\n    case FAIL_REGISTER:\r\n    case FAIL_LOGIN:\r\n    case LOG_OUT:\r\n    case AUTH_ERROR:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        userAuth: null,\r\n        errors: action.payload,\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        errors: action.payload,\r\n      };\r\n\r\n    case CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        errors: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nconst setToken = token => {\r\n    if(token) {\r\n        axios.defaults.headers.common['auth-token'] = token\r\n    } else {\r\n        delete axios.defaults.headers.common['auth-token']\r\n    }\r\n}\r\n\r\nexport default setToken","import React, {useReducer} from 'react';\r\nimport AuthContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport axios from 'axios';\r\nimport setToken from '../../utils/setToken'\r\nimport {\r\n    SUCCESS_REGISTER,\r\n    SUCCESS_LOGIN ,\r\n     FAIL_REGISTER,\r\n    FAIL_LOGIN ,\r\n    SET_ERROR,\r\n    CLEAR_ERROR,\r\n    LOG_OUT,\r\n    SET_USER,\r\n    AUTH_ERROR\r\n} from '../types'\r\n\r\nconst AuthState = (props) => {\r\n    const initialState = {\r\n        user:null, \r\n        userAuth:null,\r\n        errors:null\r\n    }\r\n    \r\n    const [state, dispatch] =  useReducer(authReducer, initialState)\r\n\r\n    //getUser\r\n\r\nconst getUser = async () => {\r\n    if(localStorage.token) {\r\n        setToken(localStorage.token)\r\n      }\r\n      try {\r\n        const res = await axios.get('/auth')\r\n        dispatch({\r\n         type:SET_USER,\r\n         payload:res.data\r\n        })\r\n      } catch(err) {\r\n       dispatch({\r\n        type:AUTH_ERROR,\r\n        payload:err\r\n       })\r\n      }\r\n}\r\n\r\n    //register user\r\n    const registerUser = async userData => {\r\n        const config = {\r\n            header: {\r\n                'Content-Type':'Application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n         const res = await axios.post('/register', userData, config)\r\n         dispatch({\r\n           type: SUCCESS_REGISTER,\r\n           payload:res.data\r\n         })\r\n         getUser()\r\n        } catch(err) {\r\n          dispatch({\r\n              type:FAIL_REGISTER,\r\n              payload:err.response.data\r\n          })\r\n        }\r\n    }\r\n\r\n\r\n    //login user\r\n    const loginUser = async userData => {\r\n        const config = {\r\n            header: {\r\n                'Content-Type':'Application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n         const res = await axios.post('/auth', userData, config)\r\n         dispatch({\r\n           type: SUCCESS_LOGIN,\r\n           payload:res.data\r\n         })\r\n\r\n         getUser()\r\n         \r\n        } catch(err) {\r\n          dispatch({\r\n              type:FAIL_LOGIN,\r\n              payload:err.response.data\r\n          })\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        dispatch({\r\n          type:LOG_OUT\r\n        })\r\n    }\r\n\r\n\r\n\r\n        const setError = (err) => {\r\n            dispatch({\r\n                type:SET_ERROR,\r\n                payload:err\r\n            })\r\n        }\r\n\r\n\r\n        const clearError = () => {\r\n            dispatch({\r\n                type:CLEAR_ERROR,\r\n              \r\n            })\r\n        }\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value = {{\r\n            user:state.user,\r\n            userAuth:state.userAuth,\r\n            errors:state.errors,\r\n            getUser:getUser,\r\n            registerUser,\r\n            loginUser,\r\n            logout,\r\n            setError,\r\n            clearError\r\n\r\n        }}>{props.children}</AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState\r\n","\r\nimport React, {useContext} from 'react';\r\nimport AuthContext from '../../../context/authContext/authContext';\r\nimport {Route, Redirect} from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component : Component, ...rest}) => {\r\n    const {userAuth} = useContext(AuthContext)\r\n\r\n    return (\r\n      <div>\r\n           <Route\r\n       {...rest}\r\n       render = {props => !userAuth ? (<Redirect to = '/login'/>) : (\r\n           <Component {...props}/>\r\n       )}\r\n       />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Navbar from './layouts/Navbar';\nimport Home from './components/pages/Home';\nimport Register from './components/pages/Register';\nimport Login from './components/pages/Login';\n\nimport GuestState from './context/guestContext/GuestState';\nimport AuthState from './context/authContext/AuthState';\nimport PrivateRoute from './components/pages/routes/privateRoute';\nimport setToken from './utils/setToken';\n\nif(localStorage.token) {\n  setToken(localStorage.token)\n}\n\nfunction App() {\n  return (\n    <AuthState>\n    <GuestState>\n      <Router>\n    <div>\n      <Navbar/>\n    <Switch>\n      <PrivateRoute exact path = '/' component ={Home}/>\n      <Route path = '/register' component = {Register}/>\n      <Route path = '/login' component = {Login}/>\n    </Switch>\n    </div>\n    </Router>\n    </GuestState>\n    </AuthState>\n  );\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}